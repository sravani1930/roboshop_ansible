- name: user server
  hosts: user
  become: yes
  tasks:
  - name: disable and enable nodejs
    ansible.builtin.shell: dnf module disable nodejs -y;dnf module enable nodejs:18 -y
  - name: install nodejs
    ansible.builtin.package:
     name: nodejs
     state: present
  
  - name: add user
    ansible.builtin.user:
     name: roboshop
     state: present
 
  - name: create directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: download the package
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/user.zip
     dest: /tmp/user.zip

  - name: unzip the file
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes
  
  - name: install the package
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy the service file
    ansible.builtin.copy:
     src: user.service
     dest: /etc/systemd/system/user.service
  
  - name: daemon reload
    ansible.builtin.systemd:
     daemon_reload: true

 
  - name: copy repo file
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongodb.repo

  - name: Install MongoDB shell
    ansible.builtin.dnf:
     name: mongodb-org
     state: present

  - name: get the categories count
    ansible.builtin.command: mongosh --host mongodb.devopsify.space --quiet --eval 'db = db.getSiblingDB("user"); db.user.count()'
    register: product_count

  - name: print the count
    ansible.builtin.debug:
     msg: "user count: {{user_count}}"

  - name: load user data
    ansible.builtin.command: mongosh --host mongodb.devopsify.space < /app/schema/user.js
    when: user_count.stdout == "0" # keep double quotes

  #- name: Unmask the catalogue service
   # ansible.builtin.systemd:
    # name: catalogue
   #  masked: no

  - name: Enable and start the catalogue service
    ansible.builtin.systemd:
     name: user
     enabled: yes
     state: started




     