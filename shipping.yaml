- name: shipping server
  hosts: shipping
  become: yes
  vars:
   mysql_password: RoboShop@1
  tasks: 
  - name: install maven
    ansible.builtin.command: dnf install maven -y

  - name: add user
    ansible.builtin.user:
     name: roboshop

  - name: create directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: download package
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
     dest: /tmp

  - name: unzip the file
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: clean package
    ansible.builtin.command: mvn clean package
    args: 
     chdir: /app
  
  - name: copy file
    ansible.builtin.copy:
     src: shipping.service
     dest: /etc/systemd/system/shipping.service

  - name: reload daemon
    ansible.builtin.systemd:
     daemon-reload: true
  
  - name: install mysql
    ansible.builtin.dnf:
     name: mysql
     state: present

  - name: check cities schema exist or not
    ansible.builtin.command: mysql -h mysql.devopsify.space -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
    register: schema

  - name: print output
    ansible.builtin.debug:
     msg: " schema output: {{schema}}"

  - name: load schema
    ansible.builtin.shell: mysql -h mysql.devopsify.space -uroot -p{{mysql_password}} < /app/schema/shipping.sql 
    when: schema.stdout != "1"

  - name: enable and start shipping
    ansible.builtin.systemd:
     name: shipping
     enabled: yes
     state: started


      